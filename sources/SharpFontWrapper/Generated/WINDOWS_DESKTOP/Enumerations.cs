// Copyright (c) 2017 SharpFontWrapper - Julien Vulliet
//
// Generated by SharpGen
//Copyright (c) 2010-2014 SharpDX - Alexandre Mutel
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

//------------------------------------------------------------------------------
// <auto-generated>
//     Types declaration for SharpFontWrapper namespace.
//     This code was generated by a tool.
//     Date : 5/30/2017 12:34:36 AM
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using SharpDX;
#if WINDOWS_DESKTOP
namespace SharpFontWrapper {

#pragma warning disable 419
#pragma warning disable 1587
#pragma warning disable 1574
    
    /// <summary>	
    /// No documentation.	
    /// </summary>	
    /// <include file='.\..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='FW1_TEXT_FLAG']/*"/>	
    /// <unmanaged>FW1_TEXT_FLAG</unmanaged>	
    /// <unmanaged-short>FW1_TEXT_FLAG</unmanaged-short>	
    [Flags]
    public enum TextFlags : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='FW1_LEFT']/*"/>	
        /// <unmanaged>FW1_LEFT</unmanaged>	
        /// <unmanaged-short>FW1_LEFT</unmanaged-short>	
        Left = unchecked((int)0),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='FW1_CENTER']/*"/>	
        /// <unmanaged>FW1_CENTER</unmanaged>	
        /// <unmanaged-short>FW1_CENTER</unmanaged-short>	
        Center = unchecked((int)1),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='FW1_RIGHT']/*"/>	
        /// <unmanaged>FW1_RIGHT</unmanaged>	
        /// <unmanaged-short>FW1_RIGHT</unmanaged-short>	
        Right = unchecked((int)2),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='FW1_TOP']/*"/>	
        /// <unmanaged>FW1_TOP</unmanaged>	
        /// <unmanaged-short>FW1_TOP</unmanaged-short>	
        Top = unchecked((int)0),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='FW1_VCENTER']/*"/>	
        /// <unmanaged>FW1_VCENTER</unmanaged>	
        /// <unmanaged-short>FW1_VCENTER</unmanaged-short>	
        VerticalCenter = unchecked((int)4),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='FW1_BOTTOM']/*"/>	
        /// <unmanaged>FW1_BOTTOM</unmanaged>	
        /// <unmanaged-short>FW1_BOTTOM</unmanaged-short>	
        Bottom = unchecked((int)8),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='FW1_NOWORDWRAP']/*"/>	
        /// <unmanaged>FW1_NOWORDWRAP</unmanaged>	
        /// <unmanaged-short>FW1_NOWORDWRAP</unmanaged-short>	
        NoWordWrapping = unchecked((int)16),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='FW1_ALIASED']/*"/>	
        /// <unmanaged>FW1_ALIASED</unmanaged>	
        /// <unmanaged-short>FW1_ALIASED</unmanaged-short>	
        Aliased = unchecked((int)32),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='FW1_CLIPRECT']/*"/>	
        /// <unmanaged>FW1_CLIPRECT</unmanaged>	
        /// <unmanaged-short>FW1_CLIPRECT</unmanaged-short>	
        ClipRectangle = unchecked((int)64),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='FW1_NOGEOMETRYSHADER']/*"/>	
        /// <unmanaged>FW1_NOGEOMETRYSHADER</unmanaged>	
        /// <unmanaged-short>FW1_NOGEOMETRYSHADER</unmanaged-short>	
        DisableGeometryShader = unchecked((int)128),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='FW1_CONSTANTSPREPARED']/*"/>	
        /// <unmanaged>FW1_CONSTANTSPREPARED</unmanaged>	
        /// <unmanaged-short>FW1_CONSTANTSPREPARED</unmanaged-short>	
        ConstantsPrepared = unchecked((int)256),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='FW1_BUFFERSPREPARED']/*"/>	
        /// <unmanaged>FW1_BUFFERSPREPARED</unmanaged>	
        /// <unmanaged-short>FW1_BUFFERSPREPARED</unmanaged-short>	
        BuffersPrepared = unchecked((int)512),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='FW1_STATEPREPARED']/*"/>	
        /// <unmanaged>FW1_STATEPREPARED</unmanaged>	
        /// <unmanaged-short>FW1_STATEPREPARED</unmanaged-short>	
        StatePrepared = unchecked((int)1024),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='FW1_IMMEDIATECALL']/*"/>	
        /// <unmanaged>FW1_IMMEDIATECALL</unmanaged>	
        /// <unmanaged-short>FW1_IMMEDIATECALL</unmanaged-short>	
        ImmediateCall = unchecked((int)1792),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='FW1_RESTORESTATE']/*"/>	
        /// <unmanaged>FW1_RESTORESTATE</unmanaged>	
        /// <unmanaged-short>FW1_RESTORESTATE</unmanaged-short>	
        RestoreState = unchecked((int)2048),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='FW1_NOFLUSH']/*"/>	
        /// <unmanaged>FW1_NOFLUSH</unmanaged>	
        /// <unmanaged-short>FW1_NOFLUSH</unmanaged-short>	
        DisableFlush = unchecked((int)4096),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='FW1_CACHEONLY']/*"/>	
        /// <unmanaged>FW1_CACHEONLY</unmanaged>	
        /// <unmanaged-short>FW1_CACHEONLY</unmanaged-short>	
        CacheOnly = unchecked((int)8192),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='FW1_NONEWGLYPHS']/*"/>	
        /// <unmanaged>FW1_NONEWGLYPHS</unmanaged>	
        /// <unmanaged-short>FW1_NONEWGLYPHS</unmanaged-short>	
        DisableNewGlyphs = unchecked((int)16384),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='FW1_ANALYZEONLY']/*"/>	
        /// <unmanaged>FW1_ANALYZEONLY</unmanaged>	
        /// <unmanaged-short>FW1_ANALYZEONLY</unmanaged-short>	
        AnalyzeOnly = unchecked((int)32768),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='FW1_UNUSED']/*"/>	
        /// <unmanaged>FW1_UNUSED</unmanaged>	
        /// <unmanaged-short>FW1_UNUSED</unmanaged-short>	
        Unused = unchecked((int)-1),			
        
        /// <summary>	
        /// None.	
        /// </summary>	
        /// <include file='.\..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='']/*"/>	
        /// <unmanaged>None</unmanaged>	
        /// <unmanaged-short>None</unmanaged-short>	
        None = unchecked((int)0),			
    }
}
#endif
